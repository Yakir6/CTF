source ~/.gdbinit-gef.py
gef config context.clear_screen 1
gef config context.ignore_registers "$cs $ss $ds $es $fs $gs"
gef config context.layout "regs code args source stack extra"

set history expansion on
set print asm-demangle on

# set solib-search-path base on binary's architecture
define sss
python
arch = gdb.execute("show arch", to_string = True)
if "aarch64" in arch:
    gdb.execute("set solib-search-path /usr/aarch64-linux-gnu/lib")
elif "arm" in arch:
    gdb.execute("set solib-search-path /usr/arm-linux-gnueabihf/lib")
end

show solib-search-path
end

# target remote localhost, arg0 = port
define trl
    sss # set solib-search-path first
    target remote localhost:$arg0
end

# at
define at
if $argc <= 1
python
import subprocess as sp
import traceback
file = get_filepath()
try:
    cmd = "pidof {}".format(file)
    pid = int(sp.check_output(cmd, shell=True).decode('utf-8').split(" ")[0])
    print("Attaching to pid: {}".format(pid))
    gdb.execute("attach {}".format(pid))
except Exception:
    traceback.print_exc()
end
if $argc == 1
   source $arg0
end

else
    help at
end
end
document at
Attach to latest pid of this file. Can also run gdbscript if provided
Usage: at [gdbscript] (optional)
end
